{"ast":null,"code":"var _jsxFileName = \"/Users/liz/Desktop/p3-TLLM/frontend/src/components/Chartss.js\";\nimport React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { sortCategoryWise } from '../utils/seperator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nexport function Chartss(props) {\n  //  console.log(props.exdata)\n  // const [expdata ,] = useState(props.exdata);\n  // const [totalexp , setTotalexp] = useState([]);\n  let categories = ['Grocery', 'Vehicle', 'Shopping', 'Travel', 'Food', 'Fun', 'Other'];\n  const totalexp = sortCategoryWise(props.exdata, categories);\n  // console.log(totalexp)\n  ///////////////////////////////////////////////////////////////////////////\n  const data = {\n    labels: ['Grocery', 'Vehicle', 'Shopping', 'Travel', 'Food', 'Fun', 'Other'],\n    datasets: [{\n      label: \"Rs\",\n      data: totalexp,\n      backgroundColor: ['rgba(255, 99, 132, 0.4)', 'rgba(54, 162, 235, 0.4)', 'rgba(255, 206, 86, 0.4)', 'rgba(75, 192, 192, 0.4)', 'rgba(153, 102, 255, 0.4)', 'rgba(230, 57, 70,0.4)', 'rgba(255, 159, 64, 0.4)'],\n      borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(230, 57, 70,1)', 'rgba(255, 159, 64, 1)'],\n      borderWidth: 2\n    }],\n    options: {\n      plugins: {\n        labels: {\n          // formatter: function (value, context) {\n          //     return context.chart.data.labels[ context.dataIndex ] + \": ₹\";\n          // },\n          // render : 'categories',\n          arc: false,\n          percision: 1,\n          fontSize: 20\n        }\n      }\n    }\n  };\n\n  //////////////////////////////////////////////////////////////////\n  return /*#__PURE__*/_jsxDEV(Doughnut, {\n    className: \"w-full h-full\",\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 10\n  }, this);\n}\n_c = Chartss;\nvar _c;\n$RefreshReg$(_c, \"Chartss\");","map":{"version":3,"names":["React","Chart","ChartJS","ArcElement","Tooltip","Legend","Doughnut","sortCategoryWise","jsxDEV","_jsxDEV","register","Chartss","props","categories","totalexp","exdata","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","plugins","arc","percision","fontSize","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/liz/Desktop/p3-TLLM/frontend/src/components/Chartss.js"],"sourcesContent":["import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { sortCategoryWise } from '../utils/seperator';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\n\nexport function Chartss(props) {\n//  console.log(props.exdata)\n  // const [expdata ,] = useState(props.exdata);\n  // const [totalexp , setTotalexp] = useState([]);\n  let categories = ['Grocery', 'Vehicle', 'Shopping', 'Travel', 'Food','Fun','Other'];\n  const totalexp = sortCategoryWise(props.exdata , categories);\n  // console.log(totalexp)\n///////////////////////////////////////////////////////////////////////////\nconst data = {\n  labels: ['Grocery', 'Vehicle', 'Shopping', 'Travel', 'Food','Fun','Other'],\n  datasets: [\n    {\n      label: \"Rs\",\n      data: totalexp,\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.4)',\n        'rgba(54, 162, 235, 0.4)',\n        'rgba(255, 206, 86, 0.4)',\n        'rgba(75, 192, 192, 0.4)',\n        'rgba(153, 102, 255, 0.4)',\n        'rgba(230, 57, 70,0.4)',\n        'rgba(255, 159, 64, 0.4)',\n      ],\n      borderColor: [\n        'rgba(255, 99, 132, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(230, 57, 70,1)',\n        'rgba(255, 159, 64, 1)',\n      ],\n      borderWidth: 2,\n    },\n  ],\n  options: {\n    \n    plugins: {\n\n     labels: {\n          // formatter: function (value, context) {\n          //     return context.chart.data.labels[ context.dataIndex ] + \": ₹\";\n          // },\n          // render : 'categories',\n          arc : false,\n          percision : 1,\n          fontSize : 20\n      },\n  },\n  },\n}\n\n\n;\n\n  //////////////////////////////////////////////////////////////////\n  return <Doughnut className='w-full h-full' data={data} />;\n}\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,IAAIC,OAAO,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACxE,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,gBAAgB,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtDP,OAAO,CAACQ,QAAQ,CAACP,UAAU,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAG7C,OAAO,SAASM,OAAOA,CAACC,KAAK,EAAE;EAC/B;EACE;EACA;EACA,IAAIC,UAAU,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAC,KAAK,EAAC,OAAO,CAAC;EACnF,MAAMC,QAAQ,GAAGP,gBAAgB,CAACK,KAAK,CAACG,MAAM,EAAGF,UAAU,CAAC;EAC5D;EACF;EACA,MAAMG,IAAI,GAAG;IACXC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAC,KAAK,EAAC,OAAO,CAAC;IAC1EC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,IAAI;MACXH,IAAI,EAAEF,QAAQ;MACdM,eAAe,EAAE,CACf,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,0BAA0B,EAC1B,uBAAuB,EACvB,yBAAyB,CAC1B;MACDC,WAAW,EAAE,CACX,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,EACvB,wBAAwB,EACxB,qBAAqB,EACrB,uBAAuB,CACxB;MACDC,WAAW,EAAE;IACf,CAAC,CACF;IACDC,OAAO,EAAE;MAEPC,OAAO,EAAE;QAERP,MAAM,EAAE;UACH;UACA;UACA;UACA;UACAQ,GAAG,EAAG,KAAK;UACXC,SAAS,EAAG,CAAC;UACbC,QAAQ,EAAG;QACf;MACJ;IACA;EACF,CAAC;;EAKC;EACA,oBAAOlB,OAAA,CAACH,QAAQ;IAACsB,SAAS,EAAC,eAAe;IAACZ,IAAI,EAAEA;EAAK;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3D;AAACC,EAAA,GAzDetB,OAAO;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}